//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DhruvEnterprises.Web.MobipactRechargeService {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RechargeAPISoap", Namespace="http://tempuri.org/")]
    public partial class RechargeAPI : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RechargeOperationCompleted;
        
        private System.Threading.SendOrPostCallback StatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback BalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlansOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCirclesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public RechargeAPI() {
            this.Url = global::DhruvEnterprises.Web.Properties.Settings.Default.EZYTM_Web_com_mobipact_www_RechargeAPI;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RechargeCompletedEventHandler RechargeCompleted;
        
        /// <remarks/>
        public event StatusCompletedEventHandler StatusCompleted;
        
        /// <remarks/>
        public event BalanceCompletedEventHandler BalanceCompleted;
        
        /// <remarks/>
        public event AccountInfoCompletedEventHandler AccountInfoCompleted;
        
        /// <remarks/>
        public event GetPlansCompletedEventHandler GetPlansCompleted;
        
        /// <remarks/>
        public event GetCirclesCompletedEventHandler GetCirclesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Recharge", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Recharge(string UserName, string ApiToken, string Mobile, int Amount, string Account, string OperatorCode, string UID) {
            object[] results = this.Invoke("Recharge", new object[] {
                        UserName,
                        ApiToken,
                        Mobile,
                        Amount,
                        Account,
                        OperatorCode,
                        UID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RechargeAsync(string UserName, string ApiToken, string Mobile, int Amount, string Account, string OperatorCode, string UID) {
            this.RechargeAsync(UserName, ApiToken, Mobile, Amount, Account, OperatorCode, UID, null);
        }
        
        /// <remarks/>
        public void RechargeAsync(string UserName, string ApiToken, string Mobile, int Amount, string Account, string OperatorCode, string UID, object userState) {
            if ((this.RechargeOperationCompleted == null)) {
                this.RechargeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRechargeOperationCompleted);
            }
            this.InvokeAsync("Recharge", new object[] {
                        UserName,
                        ApiToken,
                        Mobile,
                        Amount,
                        Account,
                        OperatorCode,
                        UID}, this.RechargeOperationCompleted, userState);
        }
        
        private void OnRechargeOperationCompleted(object arg) {
            if ((this.RechargeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RechargeCompleted(this, new RechargeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Status", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Status(string UserName, string ApiToken, string UID) {
            object[] results = this.Invoke("Status", new object[] {
                        UserName,
                        ApiToken,
                        UID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StatusAsync(string UserName, string ApiToken, string UID) {
            this.StatusAsync(UserName, ApiToken, UID, null);
        }
        
        /// <remarks/>
        public void StatusAsync(string UserName, string ApiToken, string UID, object userState) {
            if ((this.StatusOperationCompleted == null)) {
                this.StatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStatusOperationCompleted);
            }
            this.InvokeAsync("Status", new object[] {
                        UserName,
                        ApiToken,
                        UID}, this.StatusOperationCompleted, userState);
        }
        
        private void OnStatusOperationCompleted(object arg) {
            if ((this.StatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StatusCompleted(this, new StatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Balance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Balance(string UserName, string ApiToken) {
            object[] results = this.Invoke("Balance", new object[] {
                        UserName,
                        ApiToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BalanceAsync(string UserName, string ApiToken) {
            this.BalanceAsync(UserName, ApiToken, null);
        }
        
        /// <remarks/>
        public void BalanceAsync(string UserName, string ApiToken, object userState) {
            if ((this.BalanceOperationCompleted == null)) {
                this.BalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBalanceOperationCompleted);
            }
            this.InvokeAsync("Balance", new object[] {
                        UserName,
                        ApiToken}, this.BalanceOperationCompleted, userState);
        }
        
        private void OnBalanceOperationCompleted(object arg) {
            if ((this.BalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BalanceCompleted(this, new BalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AccountInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AccountInfo(string UserName, string ApiToken, string OperatorCode, string Account) {
            object[] results = this.Invoke("AccountInfo", new object[] {
                        UserName,
                        ApiToken,
                        OperatorCode,
                        Account});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AccountInfoAsync(string UserName, string ApiToken, string OperatorCode, string Account) {
            this.AccountInfoAsync(UserName, ApiToken, OperatorCode, Account, null);
        }
        
        /// <remarks/>
        public void AccountInfoAsync(string UserName, string ApiToken, string OperatorCode, string Account, object userState) {
            if ((this.AccountInfoOperationCompleted == null)) {
                this.AccountInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountInfoOperationCompleted);
            }
            this.InvokeAsync("AccountInfo", new object[] {
                        UserName,
                        ApiToken,
                        OperatorCode,
                        Account}, this.AccountInfoOperationCompleted, userState);
        }
        
        private void OnAccountInfoOperationCompleted(object arg) {
            if ((this.AccountInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountInfoCompleted(this, new AccountInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPlans", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPlans(string UserName, string ApiToken, string Mobile, string OperatorCode, string Circle) {
            object[] results = this.Invoke("GetPlans", new object[] {
                        UserName,
                        ApiToken,
                        Mobile,
                        OperatorCode,
                        Circle});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlansAsync(string UserName, string ApiToken, string Mobile, string OperatorCode, string Circle) {
            this.GetPlansAsync(UserName, ApiToken, Mobile, OperatorCode, Circle, null);
        }
        
        /// <remarks/>
        public void GetPlansAsync(string UserName, string ApiToken, string Mobile, string OperatorCode, string Circle, object userState) {
            if ((this.GetPlansOperationCompleted == null)) {
                this.GetPlansOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlansOperationCompleted);
            }
            this.InvokeAsync("GetPlans", new object[] {
                        UserName,
                        ApiToken,
                        Mobile,
                        OperatorCode,
                        Circle}, this.GetPlansOperationCompleted, userState);
        }
        
        private void OnGetPlansOperationCompleted(object arg) {
            if ((this.GetPlansCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlansCompleted(this, new GetPlansCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCircles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCircles(string UserName, string ApiToken) {
            object[] results = this.Invoke("GetCircles", new object[] {
                        UserName,
                        ApiToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCirclesAsync(string UserName, string ApiToken) {
            this.GetCirclesAsync(UserName, ApiToken, null);
        }
        
        /// <remarks/>
        public void GetCirclesAsync(string UserName, string ApiToken, object userState) {
            if ((this.GetCirclesOperationCompleted == null)) {
                this.GetCirclesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCirclesOperationCompleted);
            }
            this.InvokeAsync("GetCircles", new object[] {
                        UserName,
                        ApiToken}, this.GetCirclesOperationCompleted, userState);
        }
        
        private void OnGetCirclesOperationCompleted(object arg) {
            if ((this.GetCirclesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCirclesCompleted(this, new GetCirclesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void RechargeCompletedEventHandler(object sender, RechargeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RechargeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RechargeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void StatusCompletedEventHandler(object sender, StatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BalanceCompletedEventHandler(object sender, BalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AccountInfoCompletedEventHandler(object sender, AccountInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPlansCompletedEventHandler(object sender, GetPlansCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlansCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlansCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCirclesCompletedEventHandler(object sender, GetCirclesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCirclesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCirclesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591